- 리눅스 명령

  명령  옵션  인자(argument)
   ls       -l      /etc
   cp     원본   목적지

1. cd : 디렉토리 변경
	
	  (인자)
	  없음 : 홈 디렉토리
	  디렉토리
	  -	: 이전 디렉토리
	  ~	: 홈 디렉토리
	  ..	: 상위 디렉토리
	  . 	: 현재 디렉토리

2. pwd : 현재 작업 디렉토리 확인

3. cp : 파일 및 디렉토리 복사

	  옵션
	    -r		: 디렉토리까지 복사
	    -p		: 파일 속성 변경없이 복사

	  인자

	   원본	목적지(다른 파일명)

* 절대 경로와 상대경로

   - 절대경로 : '/'부터 모든 경로를 표시하는 방식
			/etc/ssh/sshd_config
			/var/log/syslog
			현재 위치와 상관없이 동일함

    - 상대경로 : 현재 위치를 기준으로 표시하는 방식 
			ex) /home/seo/workdir/profile
			현재 위치 : /home/seo
			=> 절대 경로 : /home/seo/workdir/profile
			=> 상대 경로 : workdir/profile
			현재 위치 : /home/seo/workdir2
			=>절대 경로 : /home/seo/workdir/profile
			=> 상대 경로 : ../workdir/profile

4. mv : 파일(디렉토리) 이동, 이름 변경
	
		(인자)
		원본	목적지(동일한 디렉토리로 이동은 이름변경 의미)
		
5. ls : 파일 목록 출력

		(옵션)
		  -l	: 자세한 정보 출력
		  -a	: 숨김파일까지 모두 출력
		  -t	: 최신 파일부터 출력(시간순), 오래된 파일순(-r 추가)
		  -h	: 파일크기를 읽기 쉬운 단위로 표현(기본 byte 단위)
		  -d 	: 디렉토리 자체 정보 출력
		  -R	: 하위 모든 파일 출력

		(인자)
		  없음 : 현재 디렉토리
		  디렉토리

6. mkdir : 디렉토리 생성

		(옵션)
		  -p	: 만들려고한느 디렉토리의 상위 디렉토리가 없을 경우
			  상위 디렉토리까지 생성

			ex) mkdir /home/seo/workdir/a/b/c

7. rmdir : 빈 디렉토리만 삭제

8. rm : 파일 및 디렉토리 삭제

		(옵션)
		  -r	: 디렉토리 삭제
		  -f	: 확인없이 강제 삭제

9. less : 긴 문서파일 확인. 확인중에 v 킬를 누르면 편집모드로 진입

10. touch : 빈파일 생성 또는 시간변경

11. cat : 짧은 문서파일 보기, 생성

	ex) cat /etc/profile : profile 내용 출력

	(옵션)
	  -n	: 행번호 출력

	* Redirection(재출력) 기호와 함께 사용해서 짧은 문서파일 작성
	ex) cat > testfile	: 화면에 입력하는 내용을 testfile에 저장
		내용입력
		ctrl+d 눌러서 저장

	* Descriptor : 표준입력(0), 표준출력(1), 표준에러(2)
				<		 >		  2>
				키보드	화면		화면

	ls b	: 표준에러를 화면으로 출력하게 됨
	ls b 2 > err.log

	* >>	: 내용을 추가할 때 사용
	cat >> testfile : testfile에 내용을 추가함

12. find : 파일 찾기

	find	 디렉토리  옵션		[-exec|-ok] rm -f {} \;	=> \는 escape sequence로
				-name						뒤에 오는 특수문자를 일반문자로
				-perm						취급

13. grep : 문서파일에서 패턴 검색하기

	grep 패턴 파일	=>	파일에서 패턴이 포함된 라인 출력

	ex)
	grep root /etc/passwd		=> root가 포함된 라인 출력
	grep ^root /etc/passwd	=> root로 시작되는 라인 출력
	grep nologin$ /etc/passwd	=> nologin으로 끝나는 라인 출력

	netstat -ntlp | grep :22		=> '|' 앞의 명령 수행 결과에서  :22가 포함된 라인 출력

14. head : 문서의 첫 10줄만 출력

	ex)
	  head /etc/passwd
	(옵션)
	  -n 숫자	: 출력을 원하는 라인수만큼

15. tail : 마지막 10줄만 출력
	(옵션)
	  -n 숫자	: 마지막 라인에서 원하는 라인수만큼 출력
	  -f		: 파일을 열어둔 채로 추가되는 내용을 실시간으로 출력

* 리눅스 파일의 시간 : mac 타임이라고도 함

  mtime : 파일 생성, 수정한 시간		ls -l
 
  atime : 파일에 접근한 시간(읽기)		ls -ul

  ctime : 속성(소유권, 허가권 등)이 변경된 시간		ls -cl	

==================================================================
- 소유권(Owbership), 허가권(Permission)

1. 소유권 : 소유자(user), 그룹(group), 그 외(other)
		ls -l
	seo@DESKTOP-8VOVB0M:~/workdir$ ls -l
	total 0
	-rw-rw-r-- 1 seo seo 0 Jul 21 12:42 testfile1

	파일을 생성한 소유자와 해당 파일의 접근 권한을 그룹에 부여해 사용하기 위한
	소유그룹으로 분류하여 허가권과 함께 동작함

	소유권 변경 : chwon 소유자.소유그룹 파일(디렉토리)
					(옵션)
					  -r	: 해당 디렉토리 하위의 모든 파일의 소유권을 변경
			
			   chgrp 소유그룹 파일(디렉토리)
					(옵션)
					  -R	: 해당 디렉토리 하위의 모든 파일을 해당 그룹으로 변경

			    usermod -aG 그룹 사용자	: 파일의 2차그룹에 해당 그룹을 포함시킴


2. 허가권 : 소유자,소유 그룹, 그외에 따라 읽기, 쓰기, 실행 세가지 권한
		일반파일과 디렉토리는 허가권의 의미가 다름

seo@DESKTOP-8VOVB0M:~$ ls -l
total 28088
      -           rw-		     rw- 		  r-- 	1 seo seo 28752681 Jul 21 11:08 file.txt
파일종류	소유자	소유그룹		그외	

r	w	x	= rwx		rw-	r-x	r--
4	2	1	=  7		 6	 5	 4	

파일의 실행권한	: 파일을 실행할 수 잇는 권한
디렉토리의 실행권한 : 디렉토리에 접근할 수 있는 권한(cd)

- 파일을 생성하면 실행권한이 모두 빠져있고, 디렉토리를 생성하면 실행권한이 모두 부여돼 있음

touch file	=> 664(일반사용자) 또는 644(root)로 생성됨
mkdir dir	=> 775(일반사용자) 또는 755(root)로 생성됨

umask : 파일(666)이나 디렉토리(777) 생성시 제거할 퍼미션

		ex) 002   => 파일(664), 디렉토리(775)
		     022   => 파일(644), 디렉토리(755)

3. 특수퍼미션

    1) SetUID(4) : 파일 실행시 실행하는 사용자의 권한으로 실행됨
    			SetUID는 실행하는 동안 소유자의 권한으로 실행되는 특수퍼미션

    2) SetGID(2) : 실행되는 동안 소유그룹의 권한이 아닌 실행하는 사용자의 그룹으로
			실행되는 특수퍼미션

    3) Stickybit(1) : 디렉토리에 설정하는 특수퍼미션으로 Stickybit가 설정된 디렉토리
			쓰기권한이 있어도 파일의 소유자만 삭제 가능


4. 퍼미션 변경

	chmod 숫자방식	파일 또는 디렉토리	: -R 옵션ㅇ르 사용하면 디렉토리일 경우
								  하위 모든 파일에 적용
			777
			755
			644

		   문자방식
			u+x		: user에게 쓰기권한 부여
			ug+wx	: user, group에게 쓰기,실행 권한 부여 
			g-w		: group에게 쓰기권한 제거
			a+x		: 모든 사용자에게 실행권한 부여
			u=rw		: user의 권란을 읽기, 쓰기로 변경

==================================================================

- 사용자 전환 : su 사용자아이디 => 특정 사용자로 변경
		     su -(-l) 사용자아이디 => 특정사용자로 로그인한 것과 같은 효과
							  즉, 사용자 환경 설정파일을 읽어서 설정함

- sudo : 일반사용자에세 root에게만 허용된 권한을 부여하고자 할 때 사용하는 기능
	    즉, sudo를 사용하면 일반사용자도 root만 실행할 수 있는 명령을 사용할 수 있음

	    설정파일은 /etc/sudoers이고, 해당 파일을 수정하기 위해서는 visudo 명령 사용.

		=> korea   ALL=/usr/sbin/shutdown -h +30, /usr/sbin/service

==================================================================
-프로세스 확인

ps : 현재 터미널에서 실행한 프로세스 출력
	-l : PID를 포함한 자세한 정보 출력

ps -ef		: 시스템에 동자가중인 모든 프로세스 출력(ex : ps -ef | grep ssh)
    aux

- nice : 프로그램 시리행시 NICE값을 설정해서 실행하는 명령(기본 NICE 값은 0)
	   일반사용자는 -NICE값을 설정할 수 없음(sudo 명령 사용)

  # nice --20 sleep 1000&	=> NICE값을 -20으로 설정해서 실행
  # nice -19 sleep 2000&	=> NICE값을 19로 설정해서 실행

- renice : 동작중인 프로세스의 NICE값을 변경하기 위한 명령

  # renice -10 PID	=> PID의 NICE값을 -10으로 변경
  # renice 10 PID		=> PID의 NICE값을 10으로 변경